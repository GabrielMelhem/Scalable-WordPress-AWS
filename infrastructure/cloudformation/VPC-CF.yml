AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template to automate the setup of the Virtual Private Cloud (VPC), subnets, internet gateway, route tables, security groups'

Parameters:
  AdminIp:
    Type: String
    Description: 'IP address of the admin user for SSH access'
    Default: 'your IP address/32'

Resources:
  # Create a new VPC for Scalable WordPress Resume
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: '10.0.0.0/16'
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: 'WordPressVPC'

  # Create a public subnet in the first availability zone of the region
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc
      CidrBlock: '10.0.1.0/24'
      MapPublicIpOnLaunch: true
      AvailabilityZone:
        Fn::Select:
          - '0'
          - Fn::GetAZs: ""
      Tags:
        - Key: Name
          Value: 'Public Subnet 1'

  # Create a private subnet in the first availability zone of the region
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc
      CidrBlock: '10.0.2.0/24'
      MapPublicIpOnLaunch: false
      AvailabilityZone:
        Fn::Select:
          - '0'
          - Fn::GetAZs: ""
      Tags:
        - Key: Name
          Value: 'Private Subnet 1'

  # Create a public subnet in the second availability zone of the region
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc
      CidrBlock: '10.0.3.0/24'
      MapPublicIpOnLaunch: true
      AvailabilityZone:
        Fn::Select:
          - '1'
          - Fn::GetAZs: ""
      Tags:
        - Key: Name
          Value: 'Public Subnet 2'
  
  # Create a private subnet in the second availability zone of the region
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc
      CidrBlock: '10.0.4.0/24'
      MapPublicIpOnLaunch: false
      AvailabilityZone:
        Fn::Select:
          - '1'
          - Fn::GetAZs: ""
      Tags:
        - Key: Name
          Value: 'Private Subnet 2'

  # Create an internet gateway for the VPC
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: 'WordPressIGW'
                                                                
  # Attach the internet gateway to the VPC
  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: Vpc
      InternetGatewayId:
        Ref: InternetGateway

  # Create a route table for the public subnets
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc
      Tags:
      - Key: Name
        Value: 'Public route table'

  # Create a public route in the public route table
  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      GatewayId:
        Ref: InternetGateway
      DestinationCidrBlock: '0.0.0.0/0'
                                                                
  # Associate the public route table with the public subnet 1
  PublicRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet1
      RouteTableId:
        Ref: PublicRouteTable

  # Associate the public route table with the public subnet 2
  PublicRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet2
      RouteTableId:
        Ref: PublicRouteTable

  # Create a route table for the private subnet 1
  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc
      Tags:
      - Key: Name
        Value: 'Private route table 1'
                                                                
  # Create a route table for the private subnet 2
  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc
      Tags:
      - Key: Name
        Value: 'Private route table 2'

  # Create a security group for the VPC that allows traffic from the internet
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: 'WordPress SG'
      GroupDescription: 'security group for WordPress that allows traffic from the internet'
      VpcId:
        Ref: Vpc
      SecurityGroupIngress:
        - CidrIp: '0.0.0.0/0'
          FromPort: '80'
          ToPort: '80'
          IpProtocol: tcp
          Description: 'Allow Web Access'
          GroupName: 'HTTP (80)'

        - CidrIp: '0.0.0.0/0'
          FromPort: '443'
          ToPort: '443'
          IpProtocol: tcp
          Description: 'Allow Secure Web Access'
          GroupName: 'HTTPS (443)'
          
        - CidrIp:
            Ref: AdminIp
          FromPort: '22'
          ToPort: '22'
          IpProtocol: tcp
          Description: 'Allow Remote Admin SSH access'
          GroupName: 'SSH (22)'
          
Outputs:
  VPCId:
    Description: "The VPC ID"
    Value:
      Ref: Vpc
                                                                
  PublicSubnet1ID:
    Description: "The public subnet 1 ID"
    Value:
      Ref: PublicSubnet1
